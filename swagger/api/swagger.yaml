openapi: 3.0.0
info:
  title: Kalshi API.
  description: |-
    This documentation describes Kalshi's rest API for market makers

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  version: 1.0.0
servers:
- url: https://trading-api.kalshi.com/v1
paths:
  /active_markets:
    get:
      tags:
      - market
      summary: GetActiveMarkets
      description: |-
        End-point for getting highly active markets on the exchange.
        Currently, gets 3 kinds of activity: Markets opening within the time window provided, markets closing within the time
        window provided, and markets that have had large price movements or large volumes within the time window provided.
      operationId: GetActiveMarkets
      parameters:
      - name: limit
        in: query
        description: "The maximum number of markets returned, this is capped at 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: Limit
      - name: min_date
        in: query
        description: The lower bound on the date searched through when looking for
          activity
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: MinDate
      - name: max_date
        in: query
        description: The upper bound on the date searched through when looking for
          activity
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: MaxDate
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveMarketsResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/markets:
    get:
      tags:
      - market
      summary: GetMarketsCached
      description: End-point for listing / discovering markets on Kalshi with data
        that is cached and so slightly lagged.
      operationId: GetMarketsCached
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketsResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/markets/{market_id}:
    get:
      tags:
      - market
      summary: GetMarketCached
      description: |-
        End-point for getting data about a specific market with data that is cached and so slightly lagged.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarketCached
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/markets/{market_id}/candlestick:
    get:
      tags:
      - market
      summary: GetCandlestickMarketHistoryCached
      description: |-
        End-point for getting open, high, low, close (OHLC) and other data for candlestick plots. See the response body
        for full information on what is returned. Data is cached and so is slightly lagged.
      operationId: GetCandlestickMarketHistoryCached
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      - name: last_seen_ts
        in: query
        description: "If provided, restricts history to trades starting from lastSeenTs"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: LastSeenTs
      - name: num_buckets
        in: query
        description: |-
          If provided, this field represents the number of buckets used to divide the market
          history data. Please provide an integer between 1 and 7,200 (inclusive).
          Defaults to 1,400. We aggregate data in the buckets.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: uint32
        x-go-name: NumBuckets
      responses:
        "200":
          description: GetCandlestickMarketHistoryResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandlestickMarketHistoryResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/markets/{market_id}/order_book:
    get:
      tags:
      - market
      summary: GetMarketOrderBookCached
      description: |-
        End-point for getting the orderbook for a market with data that is cached and so slightly lagged.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarketOrderBookCached
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketOrderBookResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/markets/{market_id}/stats_history:
    get:
      tags:
      - market
      summary: GetMarketHistoryCached
      description: |-
        End-point for getting the statistics history for a market with data that is cached and so slightly lagged.

        The value for the market_id path parameter should match the id value of the target market.
        The last_seen_ts parameter is optional, and will restrict statistics to those after provided timestamp.
        The last_seen_ts is inclusive, which means a market history point at last_seen_ts will be returned
      operationId: GetMarketHistoryCached
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      - name: last_seen_ts
        in: query
        description: "If provided, restricts history to trades starting from lastSeenTs"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: LastSeenTs
      - name: num_buckets
        in: query
        description: |-
          If provided, this field represents the number of buckets used to group the market price
          history data. Please provide an integer between 1 and 7,200 (inclusive). The higher this value, the
          more points will be returned from this endpoint. Note that the number of points returned may not be equal
          to the number of buckets because some buckets may not contain any points. Defaults to 1,400. We pick
          one representative point from each bucket (namely the last point in the bucket)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: uint32
        x-go-name: NumBuckets
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketHistoryResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/markets_by_ticker/{ticker_name}:
    get:
      tags:
      - market
      summary: GetMarketByTickerCached
      description: |-
        End-point for getting data about a specific market with data that is cached and so slightly lagged.

        The value for the ticker_name path parameter should match the ticker_name value of the target market.
      operationId: GetMarketByTickerCached
      parameters:
      - name: ticker_name
        in: path
        description: Should be filled with the ticker name of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-go-name: TickerName
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /cached/series:
    get:
      summary: GetSeriesListCached
      description: End-point for getting data about all series. Endpoint is cached
        so it is slightly lagged.
      operationId: GetSeriesListCached
      responses:
        "200":
          description: GetSeriesListResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeriesListResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /events/:
    get:
      summary: GetEventsCached
      description: End-point for getting data about all events with data that is cached
        and so slightly lagged.
      operationId: GetEventsCached
      responses:
        "200":
          description: GetEventsResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /events/{ticker}:
    get:
      tags:
      - events
      summary: GetEventByTickerCached
      description: End-point for getting data about an event by its ticker with data
        that is cached and so slightly lagged.
      operationId: GetEventByTickerCached
      parameters:
      - name: ticker
        in: path
        description: Should be the ticker of the event
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-go-name: Ticker
      responses:
        "200":
          description: GetEventByTickerResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventByTickerResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /exchange/status:
    get:
      tags:
      - exchange
      description: End-point for getting the exchange status
      operationId: GetExchangeStatus
      responses:
        "200":
          description: ""
          headers:
            exchange_active:
              style: simple
              explode: false
              schema:
                type: boolean
            immediate_funding_active:
              style: simple
              explode: false
              schema:
                type: boolean
            trading_active:
              style: simple
              explode: false
              schema:
                type: boolean
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /log_in:
    post:
      tags:
      - auth
      summary: Login
      description: End-point to start a rest session with Kalshi.
      operationId: Login
      requestBody:
        description: Login input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: ""
          headers:
            Set-Cookie:
              description: Access token is set on a cookie named 'sessions' as well
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /log_out:
    post:
      tags:
      - auth
      summary: Logout
      description: End-point to terminates your session with Kalshi.
      operationId: Logout
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /markets:
    get:
      tags:
      - market
      summary: GetMarkets
      description: End-point for listing / discovering markets on Kalshi.
      operationId: GetMarkets
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketsResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /markets/{market_id}:
    get:
      tags:
      - market
      summary: GetMarket
      description: |-
        End-point for getting data about a specific market.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarket
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /markets/{market_id}/candlestick:
    get:
      tags:
      - market
      summary: GetCandlestickMarketHistory
      description: |-
        End-point for getting open, high, low, close (OHLC) and other data for candlestick plots. See the response body
        for full information on what is returned.
      operationId: GetCandlestickMarketHistory
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      - name: last_seen_ts
        in: query
        description: "If provided, restricts history to trades starting from lastSeenTs"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: LastSeenTs
      - name: num_buckets
        in: query
        description: |-
          If provided, this field represents the number of buckets used to divide the market
          history data. Please provide an integer between 1 and 7,200 (inclusive).
          Defaults to 1,400. We aggregate data in the buckets.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: uint32
        x-go-name: NumBuckets
      responses:
        "200":
          description: GetCandlestickMarketHistoryResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandlestickMarketHistoryResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /markets/{market_id}/order_book:
    get:
      tags:
      - market
      summary: GetMarketOrderBook
      description: |-
        End-point for getting the orderbook for a market.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarketOrderBook
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketOrderBookResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /markets/{market_id}/stats_history:
    get:
      tags:
      - market
      summary: GetMarketHistory
      description: |-
        End-point for getting the statistics history for a market.

        The value for the market_id path parameter should match the id value of the target market.
        The last_seen_ts parameter is optional, and will restrict statistics to those after provided timestamp.
        The last_seen_ts is inclusive, which means a market history point at last_seen_ts will be returned
      operationId: GetMarketHistory
      parameters:
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      - name: last_seen_ts
        in: query
        description: "If provided, restricts history to trades starting from lastSeenTs"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: LastSeenTs
      - name: num_buckets
        in: query
        description: |-
          If provided, this field represents the number of buckets used to group the market price
          history data. Please provide an integer between 1 and 7,200 (inclusive). The higher this value, the
          more points will be returned from this endpoint. Note that the number of points returned may not be equal
          to the number of buckets because some buckets may not contain any points. Defaults to 1,400. We pick
          one representative point from each bucket (namely the last point in the bucket)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: uint32
        x-go-name: NumBuckets
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketHistoryResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /markets_by_ticker/{ticker_name}:
    get:
      tags:
      - market
      summary: GetMarketByTicker
      description: |-
        End-point for getting data about a specific market based on its ticker.

        The value for the ticker_name path parameter should match the ticker_name value of the target market.
      operationId: GetMarketByTicker
      parameters:
      - name: ticker_name
        in: path
        description: Should be filled with the ticker name of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-go-name: TickerName
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /passwords/reset:
    post:
      tags:
      - auth
      summary: ResetPassword
      description: |-
        End-point to request a password reset email link.

        To be used in case you forget your password.
      operationId: ResetPassword
      requestBody:
        description: Reset password input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        "202":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /passwords/reset/{code}/confirm:
    put:
      tags:
      - auth
      summary: ResetPasswordConfirm
      description: |-
        End-point to finish the password reset flow.

        The code param on the path should be filled with the verification code sent by email.
      operationId: ResetPasswordConfirm
      parameters:
      - name: code
        in: path
        description: Should be filled with the verification code received on the sign-up
          email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-go-name: Code
      requestBody:
        description: Data required to finish a password reset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPasswordResetRequest'
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /ranged_markets/{ranged_market_id}:
    get:
      tags:
      - ranged_market
      summary: GetRangedMarket
      description: End-point for getting data about a ranged market
      operationId: GetRangedMarket
      parameters:
      - name: ranged_market_id
        in: path
        description: Should be filled in with a ranged market id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: RangedMarketId
      responses:
        "200":
          description: GetRangedMarketResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRangedMarketResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /ranged_markets_by_ticker/{ticker}:
    get:
      tags:
      - ranged_markets
      summary: GetRangedMarketByTicker
      description: End-point for getting data about a ranged market by its ticker
      operationId: GetRangedMarketByTicker
      parameters:
      - name: ticker
        in: path
        description: Should be the ticker of the ranged market
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-go-name: Ticker
      responses:
        "200":
          description: GetRangedMarketByTickerResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRangedMarketByTickerResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /series/:
    get:
      summary: GetSeriesList
      description: End-point for getting data about all series
      operationId: GetSeriesList
      responses:
        "200":
          description: GetSeriesListResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeriesListResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /series/{series_ticker}:
    get:
      tags:
      - series
      summary: GetSeriesByTicker
      description: End-point for getting data about an event by its ticker
      operationId: GetSeriesByTicker
      parameters:
      - name: series_ticker
        in: path
        description: Should be the ticker of the series
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-go-name: Ticker
      responses:
        "200":
          description: GetSeriesByTickerResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeriesByTickerResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /trades:
    get:
      summary: GetTrades
      description: End-point for getting all trades for all markets.
      operationId: GetTrades
      parameters:
      - name: trades_date
        in: query
        description: "Restricts the response to trades during a certain day (give\
          \ trades_date in ET with format: YYYY-MM-DD). Dates returned will be UTC"
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-go-name: TradesDate
      - name: page_size
        in: query
        description: Parameter to specify the number of results per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageSize
      - name: page_number
        in: query
        description: Parameter to specify which page of the results should be retrieved
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageNumber
      - name: market_id
        in: query
        description: Parameter to specify a specific marketId to get trades from
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-go-name: MarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradesGetResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /users:
    delete:
      tags:
      - user
      summary: UserDeactivate
      description: End-point for deactivating an user. A call to this end-point deactivates
        the current user and ends the current session.
      operationId: UserDeactivate
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /users/{user_id}:
    get:
      tags:
      - user
      summary: UserGetProfile
      description: |-
        End-point for retrieving the logged in user's profile.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetProfile
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetProfileResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/account/history:
    get:
      tags:
      - account
      summary: UserGetAccountHistory
      description: |-
        End-point for getting the logged in user's important past actions and events related to the user's positions.

        This contains entries for user's explicit actions but also for market events.

        There will be entries for:

        submitting, editing / canceling orders
        requesting deposits and withdrawals
        trade execution (order matching)
        market settlements on markets where you have a position

        The value for the user_id path parameter should match the user_id value returned on the response for the
        last login request (POST /log_in).
      operationId: UserGetAccountHistory
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: Deposits
        in: query
        description: If true the response should include deposit entries
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Withdrawals
        in: query
        description: If true the response should include withdrawal entries
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Orders
        in: query
        description: If true the response should include order entries
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Settlements
        in: query
        description: If true the response should include settlement entries
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Trades
        in: query
        description: If true the response should include trade entries
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Credits
        in: query
        description: If true the response should include credit entries
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Limit
        in: query
        description: "Restricts the response to a return the first \"limit\" amount\
          \ of acct history items. Note if you specify a limit, you cannot specify\
          \ a PageSize or PageNumber"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        description: Parameter to specify the number of results per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageSize
      - name: page_number
        in: query
        description: Parameter to specify which page of the results should be retrieved
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageNumber
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetAccountHistoryResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/account/pnl:
    get:
      tags:
      - account
      summary: UserGetProfitsAndLosses
      description: This end point returns profits and losses between two dates
      operationId: UserGetProfitsAndLosses
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: StartTs
        in: query
        description: "Start time of pnl period, represented as the number of seconds\
          \ since Unix epoch"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: EndTs
        in: query
        description: "End time of pnl period, represented as the number of seconds\
          \ since Unix epoch"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cent'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/balance:
    get:
      tags:
      - user
      summary: UserGetBalance
      description: |-
        End-point for getting the balance of the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetBalance
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetBalanceResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/batch_orders:
    post:
      tags:
      - user
      summary: UserBatchOrdersCreate
      description: |-
        End-point for submitting up to 20 orders in a batch.
        Available to members with advanced access only.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserBatchOrdersCreate
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      requestBody:
        description: Order create input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBatchOrdersCreateRequest'
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBatchOrdersCreateResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
    delete:
      tags:
      - user
      summary: UserBatchOrdersCancel
      description: |-
        End-point for cancelling up to 40 orders at once.
        Available to members with advanced access only.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserBatchOrdersCancel
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      requestBody:
        description: Orders cancel input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBatchOrdersCancelRequest'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBatchOrdersCancelResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/immediate_funding:
    get:
      tags:
      - users
      summary: GetUserImmediateFunding
      description: End-point for getting immediate funding info for a member.
      operationId: GetUserImmediateFunding
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: DepositAmountCents
        in: query
        description: |-
          Pass this parameter if you'd like to see how much of a deposit will be funded by
          immediate funding. If you don't need this information, pass 0 cents.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: GetUserImmediateFundingResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserImmediateFundingResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/notifications:
    get:
      tags:
      - account
      summary: UserGetNotifications
      description: |-
        End-point for getting notifications for the current logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetNotifications
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: page_size
        in: query
        description: Number of results per page
        required: true
        style: form
        explode: true
        schema:
          maximum: 50
          type: integer
          format: int64
        x-go-name: PageSize
      - name: page_number
        in: query
        description: Page of the results
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageNumber
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetNotificationsResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/notifications/{notification_id}/read:
    put:
      tags:
      - account
      summary: NotificationMarkRead
      description: |-
        End-point for marking a notification as read.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the notification_id path parameter should match the notification_id value of the notification to be marked as read.
      operationId: NotificationMarkRead
      parameters:
      - name: user_id
        in: path
        description: user_id should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: notification_id
        in: path
        description: notification_id should be filled with the id of the notification
          to be mark as read
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: NotificationId
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/notifications/preferences:
    get:
      tags:
      - account
      summary: GetNotificationPreferences
      description: |-
        End-point for getting e-mail subscription mode for the current user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: GetNotificationPreferences
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationPreferencesResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/orders:
    get:
      tags:
      - user
      summary: UserOrdersGet
      description: |-
        End-point for getting all orders for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserOrdersGet
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: market_id
        in: query
        description: Restricts the response to orders in a single market
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      - name: is_yes
        in: query
        description: Restricts the response to orders in a single direction (yes or
          no)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-go-name: IsYes
      - name: min_price
        in: query
        description: Restricts the response to orders within a minimum price
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: MinPrice
      - name: max_price
        in: query
        description: Restricts the response to orders within a maximum price
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: MaxPrice
      - name: min_place_count
        in: query
        description: Restricts the response to orders within a minimum place count
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MinPlaceCount
      - name: max_place_count
        in: query
        description: Restricts the response to orders within a maximum place count
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MaxPlaceCount
      - name: min_initial_count
        in: query
        description: Restricts the response to orders within a minimum initial count
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MinInitialCount
      - name: max_initial_count
        in: query
        description: Restricts the response to orders within a maximum initial count
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MaxInitialCount
      - name: min_remaining_count
        in: query
        description: Restricts the response to orders within a minimum remaining resting
          contracts count
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MinRemainingCount
      - name: max_remaining_count
        in: query
        description: Restricts the response to orders within a maximum remaining resting
          contracts count
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MaxRemainingCount
      - name: min_date
        in: query
        description: Restricts the response to orders after a timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-go-name: MinDate
      - name: max_date
        in: query
        description: Restricts the response to orders before a timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-go-name: MaxDate
      - name: get_queue_position
        in: query
        description: "If true, gets the queue placement for every resting order returned"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-go-name: GetQueuePosition
      - name: status
        in: query
        description: "Restricts the response to orders that have a certain status:\
          \ resting, canceled, or executed"
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-go-name: Status
      - name: page_size
        in: query
        description: Parameter to specify the number of results per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageSize
      - name: page_number
        in: query
        description: Parameter to specify which page of the results should be retrieved
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageNumber
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrdersGetResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
    post:
      tags:
      - user
      summary: UserOrderCreate
      description: |-
        End-point for submitting orders in a market.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserOrderCreate
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      requestBody:
        description: Order create input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrderCreateRequest'
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderCreateResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/orders/{order_id}:
    delete:
      tags:
      - user
      summary: UserOrderCancel
      description: |-
        End-point for canceling orders.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
        The value for the order_id should match the id field of the order you want to decrease.
        Commonly delete end-points return 204 status with no body content on success.
        But we can't completely delete the order, as it may be partially filled already.
        So what the delete end-point does is just reducing the order completely zeroing the remaining resting contracts on it.
        The zeroed order is returned on the response payload, as a form of validation for the client.
      operationId: UserOrderCancel
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: order_id
        in: path
        description: This order_id should be filled with the id of the order to be
          decrease
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: OrderId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderDecreaseResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/orders/{order_id}/decrease:
    post:
      tags:
      - user
      summary: UserOrderDecrease
      description: |-
        End-point for decreasing the number of contracts on orders. This is the only kind of edit we support on orders.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the order_id should match the id field of the order you want to decrease.
      operationId: UserOrderDecrease
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: order_id
        in: path
        description: This order_id should be filled with the id of the order to be
          decrease
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: OrderId
      requestBody:
        description: Order data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrderDecreaseRequest'
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderDecreaseResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/password:
    put:
      tags:
      - user
      summary: UserChangePassword
      description: |-
        End-point for updating logged-in user password.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserChangePassword
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      requestBody:
        description: Change password input fields.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePasswordRequest'
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/portfolio/history:
    get:
      tags:
      - portfolio
      summary: UserGetPortfolioHistory
      description: |-
        End-point for getting the logged in user's portfolio historical track.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetPortfolioHistory
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      requestBody:
        description: Order create input data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGetPortfolioHistoryRequest'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetPortfolioHistoryResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/positions:
    get:
      tags:
      - user
      summary: UserGetMarketPositions
      description: |-
        End-point for getting all market positions for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetMarketPositions
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketPositionsResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/positions/{market_id}:
    get:
      tags:
      - user
      summary: UserGetMarketPosition
      description: |-
        End-point for getting the market positions for the logged in user, in a specific market.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the market_id path parameter should match the id value of the target market.
      operationId: UserGetMarketPosition
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketPositionResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/ranged_positions/{ranged_market_id}:
    get:
      tags:
      - ranged_markets
      summary: UserGetRangedMarketPosition
      description: |-
        End-point for getting the market positions and additional data for the logged in user for all markets whose results linked by a single outcome.
        These markets share a parameter ranged_market_id, which indicates their relationship with each other.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the ranged_market_id path parameter should match the id value of the target market.
      operationId: UserGetRangedMarketPosition
      parameters:
      - name: user_id
        in: path
        description: Should be filled in with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: ranged_market_id
        in: path
        description: Should be filled with the id of the target ranged market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: RangedMarketId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetRangedMarketPositionResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/referrals:
    get:
      tags:
      - user
      summary: UserGetReferralInfo
      description: End-point for getting all information related to a member's referral
        status.
      operationId: UserGetReferralInfo
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetReferralInfoResponse'
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
  /users/{user_id}/subscribe:
    patch:
      tags:
      - account
      summary: ChangeSubscription
      description: |-
        End-point for changing e-mail subscription mode for the current user.

        This end-point is very useful for users that have a large volume of orders and don't want to be email notified whenever an order is submitted / edited / canceled or matches.

        This is specially useful for Market Makers.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: ChangeSubscription
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      requestBody:
        description: Change subscription data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionRequest'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSubscriptionResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/trades:
    get:
      tags:
      - user
      summary: UserTradesGet
      description: |-
        End-point for getting all trades for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserTradesGet
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: market_id
        in: query
        description: Restricts the response to trades in a specific market.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      - name: order_id
        in: query
        description: Restricts the response to trades related to a specific order.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid4
        x-go-name: OrderId
      - name: MinPrice
        in: query
        description: Restricts the response to trades within a minimum price.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: MaxPrice
        in: query
        description: Restricts the response to trades within a maximum price.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: MinCount
        in: query
        description: Restricts the response to trades within a minimum contracts count.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: max_count
        in: query
        description: Restricts the response to trades within a maximum contracts count.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        x-go-name: MaxCount
      - name: min_date
        in: query
        description: Restricts the response to trades after a timestamp.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-go-name: MinDate
      - name: max_date
        in: query
        description: Restricts the response to trades before a timestamp.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        x-go-name: MaxDate
      - name: page_size
        in: query
        description: Parameter to specify the number of results per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageSize
      - name: page_number
        in: query
        description: Parameter to specify which page of the results should be retrieved
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
        x-go-name: PageNumber
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTradesGetResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/watchlist:
    get:
      tags:
      - user
      summary: UserGetWatchlist
      description: |-
        End-point for getting the market watchlist for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetWatchlist
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetWatchlistResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/watchlist/{market_id}:
    put:
      tags:
      - user
      summary: UserAddWatchlist
      description: |-
        End-point for adding a market to the logged in user's watchlist.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the market_id path parameter should match the id value of the market to be added.
      operationId: UserAddWatchlist
      parameters:
      - name: user_id
        in: path
        description: user_id should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: market_id
        in: path
        description: market_id should be filled with the id of the market to be added
          to the watchlist
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
    delete:
      tags:
      - user
      summary: UserRemoveWatchlist
      description: |-
        End-point for removing a market from the logged in user's watchlist.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the market_id path parameter should match the id value of the market to be added.
      operationId: UserRemoveWatchlist
      parameters:
      - name: user_id
        in: path
        description: Should be filled with your user_id provided on log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      - name: market_id
        in: path
        description: Should be filled with the id of the target market
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: MarketId
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
  /users/{user_id}/withdrawals/available:
    get:
      tags:
      - users
      summary: GetUserWithdrawalAvailableBalance
      description: End-point for getting how much money a member is elgible to withdraw
      operationId: GetUserWithdrawalAvailableBalance
      parameters:
      - name: user_id
        in: path
        description: This parameter should be filled with your user_id provided on
          log_in
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid4
        x-go-name: UserId
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithdrawalAvailableBalanceResponse'
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              style: simple
              explode: false
              schema:
                type: string
            details:
              style: simple
              explode: false
              schema:
                type: string
            message:
              style: simple
              explode: false
              schema:
                type: string
            service:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - cookie: []
components:
  schemas:
    AccountHistoryEntry:
      required:
      - type
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountHistoryEntryData'
        type:
          type: string
          description: "Type of entry, one of Deposit, Withdrawal, Order, or Settlement"
          x-go-name: Type
      example:
        data:
          Order:
            original_count: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            remaining_count: 9
            market_title: market_title
            price: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            market_id: market_id
            fcc_canceled_count: 5
            canceled_count: 6
            filled_count: 5
            is_yes: true
            close_cancel_count: 1
          Deposit:
            amount: null
            returned_amount: null
            updated_at: 2000-01-23T04:56:07.000+00:00
            fee: null
            created_at: 2000-01-23T04:56:07.000+00:00
            immediate_status: immediate_status
            deposit_type: deposit_type
            immediate_amount: null
            status: status
          Settlement:
            market_title: market_title
            no_total_cost: 2
            settled_time: 2000-01-23T04:56:07.000+00:00
            yes_count: 7
            market_id: market_id
            market_result: market_result
            no_count: 3
            profit: 4
            determined_time: 2000-01-23T04:56:07.000+00:00
            yes_total_cost: 1
          Trade:
            amount: 1
            market_title: market_title
            price: 6
            fee: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            market_id: market_id
            is_yes: true
          Credit:
            reason: reason
            amount_cents: 0
            created_at: 2000-01-23T04:56:07.000+00:00
            type: type
            status: status
          Withdrawal:
            amount: null
            returned_amount: null
            updated_at: 2000-01-23T04:56:07.000+00:00
            fee: null
            created_at: 2000-01-23T04:56:07.000+00:00
            status: status
        type: type
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    AccountHistoryEntryData:
      type: object
      properties:
        Credit:
          $ref: '#/components/schemas/CreditHistory'
        Deposit:
          $ref: '#/components/schemas/DepositHistory'
        Order:
          $ref: '#/components/schemas/OrderHistory'
        Settlement:
          $ref: '#/components/schemas/SettlementHistory'
        Trade:
          $ref: '#/components/schemas/TradeHistory'
        Withdrawal:
          $ref: '#/components/schemas/WithdrawalHistory'
      example:
        Order:
          original_count: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          remaining_count: 9
          market_title: market_title
          price: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          market_id: market_id
          fcc_canceled_count: 5
          canceled_count: 6
          filled_count: 5
          is_yes: true
          close_cancel_count: 1
        Deposit:
          amount: null
          returned_amount: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: null
          created_at: 2000-01-23T04:56:07.000+00:00
          immediate_status: immediate_status
          deposit_type: deposit_type
          immediate_amount: null
          status: status
        Settlement:
          market_title: market_title
          no_total_cost: 2
          settled_time: 2000-01-23T04:56:07.000+00:00
          yes_count: 7
          market_id: market_id
          market_result: market_result
          no_count: 3
          profit: 4
          determined_time: 2000-01-23T04:56:07.000+00:00
          yes_total_cost: 1
        Trade:
          amount: 1
          market_title: market_title
          price: 6
          fee: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          market_id: market_id
          is_yes: true
        Credit:
          reason: reason
          amount_cents: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
          status: status
        Withdrawal:
          amount: null
          returned_amount: null
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: null
          created_at: 2000-01-23T04:56:07.000+00:00
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    BankAccountDetails:
      title: BankAccountDetails
      required:
      - bank_id
      - mask
      - name
      - plaid_item_needs_relink
      - subtype
      - type
      type: object
      properties:
        bank_id:
          type: string
          x-go-name: BankId
        mask:
          type: string
          x-go-name: Mask
        name:
          type: string
          x-go-name: Name
        plaid_item_needs_relink:
          type: boolean
          x-go-name: Disconnected
        routing_number:
          type: string
          x-go-name: RoutingNumber
        subtype:
          type: string
          x-go-name: Subtype
        type:
          type: string
          x-go-name: Type
      description: |-
        Encapsulates meta-data of bank accounts.

        This is not stored within Kalshi, it is always proxied from the clearing house.
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Cent:
      type: integer
      format: int64
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    CentiCent:
      type: integer
      format: int64
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    ChangeSubscriptionRequest:
      required:
      - subscription_level
      type: object
      properties:
        push_preferences:
          type: boolean
          x-go-name: PushPreferences
        subscription_level:
          type: string
          description: "Specifies the subscription level for email notifications its\
            \ values can be: \"none\", \"basic\" or \"all\""
          x-go-name: Level
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ChangeSubscriptionResponse:
      required:
      - preferences
      type: object
      properties:
        preferences:
          $ref: '#/components/schemas/SubscriptionPreference'
      example:
        preferences:
          subscription_level: subscription_level
          push_preferences:
          - push_preferences
          - push_preferences
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ConfirmPasswordResetRequest:
      required:
      - password
      - user_id
      type: object
      properties:
        password:
          minLength: 6
          type: string
          description: The new password.
          x-go-name: Password
        user_id:
          type: string
          description: UserUUID for your user. You can get this from the password
            reset link query parameter.
          format: uuid4
          x-go-name: UserId
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreateUserRequest:
      title: Request for creating a new user.
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: A valid email for the new user.
          example: john@example.com
          x-go-name: Email
        password:
          type: string
          description: Password for the new user account.
          example: s3cr3t
          x-go-name: Password
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreateUserResponse:
      required:
      - user_id
      type: object
      properties:
        code:
          type: string
          description: "swagger: ignore"
          x-go-name: Code
        user_id:
          type: string
          description: user_id for the created user.
          format: uuid4
          x-go-name: UserId
      description: Response for submitting an order
      example:
        code: code
        user_id: user_id
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreditHistory:
      type: object
      properties:
        amount_cents:
          $ref: '#/components/schemas/Cent'
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        reason:
          type: string
          x-go-name: CreditReason
        status:
          $ref: '#/components/schemas/CreditStatus'
        type:
          $ref: '#/components/schemas/CreditType'
      example:
        reason: reason
        amount_cents: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        type: type
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreditStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    CreditType:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    Deposit:
      title: Deposit
      type: object
      properties:
        amount_cents:
          $ref: '#/components/schemas/Cent'
        bank_id:
          type: string
          x-go-name: BankId
        created_ts:
          type: string
          format: date-time
          x-go-name: CreatedTs
        deposit_type:
          $ref: '#/components/schemas/DepositType'
        id:
          type: string
          x-go-name: Id
        immediate_amount:
          $ref: '#/components/schemas/Cent'
        immediate_status:
          $ref: '#/components/schemas/ImmediateFundingStatus'
        return_code:
          type: string
          x-go-name: ReturnCode
        return_reason:
          type: string
          x-go-name: ReturnReason
        status:
          $ref: '#/components/schemas/DepositStatus'
        user_id:
          type: string
          x-go-name: UserId
      description: Represents a deposit.
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    DepositHistory:
      title: DepositHistory
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Cent'
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        deposit_type:
          $ref: '#/components/schemas/DepositType'
        fee:
          $ref: '#/components/schemas/Cent'
        immediate_amount:
          $ref: '#/components/schemas/Cent'
        immediate_status:
          $ref: '#/components/schemas/ImmediateFundingStatus'
        returned_amount:
          $ref: '#/components/schemas/Cent'
        status:
          $ref: '#/components/schemas/DepositStatus'
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
      description: Represents a deposit account history item
      example:
        amount: null
        returned_amount: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        fee: null
        created_at: 2000-01-23T04:56:07.000+00:00
        immediate_status: immediate_status
        deposit_type: deposit_type
        immediate_amount: null
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    DepositStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    DepositType:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    EventChildMarket:
      type: object
      properties:
        can_close_early:
          type: boolean
          x-go-name: CanCloseEarly
        close_date:
          type: string
          format: date-time
          x-go-name: CloseDate
        close_unconfirmed:
          type: boolean
          x-go-name: CloseUnconfirmed
        create_date:
          type: string
          format: date-time
          x-go-name: CreateDate
        dollar_open_interest:
          type: integer
          format: int64
          x-go-name: DollarOpenInterest
        dollar_recent_volume:
          type: integer
          format: int64
          x-go-name: DollarRecentVolume
        dollar_volume:
          type: integer
          format: int64
          x-go-name: DollarVolume
        expiration_date:
          type: string
          format: date-time
          x-go-name: ExpirationDate
        expiration_value:
          type: string
          x-go-name: ExpirationValue
        id:
          type: string
          format: uuid4
          x-go-name: Id
        last_price:
          $ref: '#/components/schemas/Cent'
        liquidity:
          $ref: '#/components/schemas/Cent'
        list_date:
          type: string
          format: date-time
          x-go-name: ListDate
        mini_title:
          type: string
          x-go-name: MiniTitle
        open_date:
          type: string
          format: date-time
          x-go-name: OpenDate
        open_interest:
          type: integer
          format: int64
          x-go-name: OpenInterest
        previous_price:
          $ref: '#/components/schemas/Cent'
        previous_yes_ask:
          $ref: '#/components/schemas/Cent'
        previous_yes_bid:
          $ref: '#/components/schemas/Cent'
        recent_volume:
          type: integer
          format: int64
          x-go-name: RecentVolume
        result:
          type: string
          x-go-name: Result
        rulebook_variables:
          type: object
          additionalProperties:
            type: string
          x-go-name: RulebookVariables
        status:
          $ref: '#/components/schemas/MarketStatus'
        sub_title:
          type: string
          x-go-name: SubTitle
        ticker_name:
          type: string
          x-go-name: TickerName
        title:
          type: string
          x-go-name: Title
        volume:
          type: integer
          format: int64
          x-go-name: Volume
        yes_ask:
          $ref: '#/components/schemas/Cent'
        yes_bid:
          $ref: '#/components/schemas/Cent'
      example:
        expiration_value: expiration_value
        dollar_recent_volume: 6
        ticker_name: ticker_name
        close_date: 2000-01-23T04:56:07.000+00:00
        rulebook_variables:
          key: rulebook_variables
        dollar_volume: 1
        mini_title: mini_title
        open_interest: 5
        yes_bid: null
        liquidity: null
        expiration_date: 2000-01-23T04:56:07.000+00:00
        title: title
        yes_ask: null
        result: result
        recent_volume: 2
        id: id
        close_unconfirmed: true
        create_date: 2000-01-23T04:56:07.000+00:00
        open_date: 2000-01-23T04:56:07.000+00:00
        previous_yes_bid: null
        sub_title: sub_title
        previous_yes_ask: null
        can_close_early: true
        list_date: 2000-01-23T04:56:07.000+00:00
        volume: 7
        dollar_open_interest: 0
        previous_price: null
        last_price: 5
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    EventData:
      type: object
      properties:
        category:
          type: string
          x-go-name: Category
        description_context:
          type: string
          x-go-name: DescriptionContext
        markets:
          type: array
          items:
            $ref: '#/components/schemas/EventChildMarket'
          x-go-name: Markets
        metrics_tags:
          type: array
          items:
            type: string
          x-go-name: MetricsTags
        min_tick_size:
          type: string
          x-go-name: MinTickSize
        mini_title:
          type: string
          x-go-name: MiniTitle
        mutually_exclusive:
          type: boolean
          x-go-name: MutuallyExclusive
        mutually_exclusive_side:
          $ref: '#/components/schemas/Side'
        series_ticker:
          type: string
          x-go-name: SeriesTicker
        settle_details:
          type: string
          x-go-name: SettleDetails
        settlement_sources:
          type: array
          items:
            $ref: '#/components/schemas/SettlementSource'
          x-go-name: SettlementSources
        sub_title:
          type: string
          x-go-name: SubTitle
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        target_datetime:
          type: string
          format: date-time
          x-go-name: TargetDatetime
        ticker:
          type: string
          x-go-name: Ticker
        title:
          type: string
          x-go-name: Title
        underlying:
          type: string
          x-go-name: Underlying
      example:
        mutually_exclusive: true
        ticker: ticker
        sub_title: sub_title
        metrics_tags:
        - metrics_tags
        - metrics_tags
        mutually_exclusive_side: mutually_exclusive_side
        mini_title: mini_title
        description_context: description_context
        underlying: underlying
        min_tick_size: min_tick_size
        title: title
        settlement_sources:
        - name: name
          url: url
        - name: name
          url: url
        tags:
        - tags
        - tags
        target_datetime: 2000-01-23T04:56:07.000+00:00
        markets:
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 5
          yes_bid: null
          liquidity: null
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: null
          result: result
          recent_volume: 2
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: null
          sub_title: sub_title
          previous_yes_ask: null
          can_close_early: true
          list_date: 2000-01-23T04:56:07.000+00:00
          volume: 7
          dollar_open_interest: 0
          previous_price: null
          last_price: 5
          status: status
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 5
          yes_bid: null
          liquidity: null
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: null
          result: result
          recent_volume: 2
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: null
          sub_title: sub_title
          previous_yes_ask: null
          can_close_early: true
          list_date: 2000-01-23T04:56:07.000+00:00
          volume: 7
          dollar_open_interest: 0
          previous_price: null
          last_price: 5
          status: status
        settle_details: settle_details
        series_ticker: series_ticker
        category: category
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetActiveMarketsResponse:
      type: object
      properties:
        active_markets:
          type: array
          items:
            $ref: '#/components/schemas/MarketActivity'
          x-go-name: Markets
      example:
        active_markets:
        - open_date: 2000-01-23T04:56:07.000+00:00
          close_date: 2000-01-23T04:56:07.000+00:00
          price_change: 0
          ticker: ticker
          volume_increase: 6
          market_id: market_id
        - open_date: 2000-01-23T04:56:07.000+00:00
          close_date: 2000-01-23T04:56:07.000+00:00
          price_change: 0
          ticker: ticker
          volume_increase: 6
          market_id: market_id
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetCandlestickMarketHistoryResponse:
      required:
      - points
      type: object
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/MarketHistoryCandleStickInfo'
          x-go-name: Points
      example:
        points:
        - YesAsk: null
          StartTs: 5
          EndTs: 0
          Price:
            high: null
            low: null
            mean: null
            close: 1
            open: null
          Volume: 5
          YesBid: null
          OpenInterest: 6
        - YesAsk: null
          StartTs: 5
          EndTs: 0
          Price:
            high: null
            low: null
            mean: null
            close: 1
            open: null
          Volume: 5
          YesBid: null
          OpenInterest: 6
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetEventByTickerResponse:
      required:
      - event
      type: object
      properties:
        event:
          $ref: '#/components/schemas/EventData'
      example:
        event:
          mutually_exclusive: true
          ticker: ticker
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          description_context: description_context
          underlying: underlying
          min_tick_size: min_tick_size
          title: title
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          tags:
          - tags
          - tags
          target_datetime: 2000-01-23T04:56:07.000+00:00
          markets:
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 5
            yes_bid: null
            liquidity: null
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: null
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: null
            sub_title: sub_title
            previous_yes_ask: null
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 7
            dollar_open_interest: 0
            previous_price: null
            last_price: 5
            status: status
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 5
            yes_bid: null
            liquidity: null
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: null
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: null
            sub_title: sub_title
            previous_yes_ask: null
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 7
            dollar_open_interest: 0
            previous_price: null
            last_price: 5
            status: status
          settle_details: settle_details
          series_ticker: series_ticker
          category: category
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetEventsResponse:
      required:
      - events
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventData'
          x-go-name: Events
      example:
        events:
        - mutually_exclusive: true
          ticker: ticker
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          description_context: description_context
          underlying: underlying
          min_tick_size: min_tick_size
          title: title
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          tags:
          - tags
          - tags
          target_datetime: 2000-01-23T04:56:07.000+00:00
          markets:
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 5
            yes_bid: null
            liquidity: null
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: null
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: null
            sub_title: sub_title
            previous_yes_ask: null
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 7
            dollar_open_interest: 0
            previous_price: null
            last_price: 5
            status: status
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 5
            yes_bid: null
            liquidity: null
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: null
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: null
            sub_title: sub_title
            previous_yes_ask: null
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 7
            dollar_open_interest: 0
            previous_price: null
            last_price: 5
            status: status
          settle_details: settle_details
          series_ticker: series_ticker
          category: category
        - mutually_exclusive: true
          ticker: ticker
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          description_context: description_context
          underlying: underlying
          min_tick_size: min_tick_size
          title: title
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          tags:
          - tags
          - tags
          target_datetime: 2000-01-23T04:56:07.000+00:00
          markets:
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 5
            yes_bid: null
            liquidity: null
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: null
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: null
            sub_title: sub_title
            previous_yes_ask: null
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 7
            dollar_open_interest: 0
            previous_price: null
            last_price: 5
            status: status
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 5
            yes_bid: null
            liquidity: null
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: null
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: null
            sub_title: sub_title
            previous_yes_ask: null
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 7
            dollar_open_interest: 0
            previous_price: null
            last_price: 5
            status: status
          settle_details: settle_details
          series_ticker: series_ticker
          category: category
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetMarketHistoryResponse:
      required:
      - market_stats_points
      type: object
      properties:
        market_stats_points:
          type: array
          items:
            $ref: '#/components/schemas/MarketStatsPoint'
          x-go-name: MarketStatsPoints
      example:
        market_stats_points:
        - volume: 2
          dollar_volume: 6
          price: 5
          dollar_open_interest: 0
          open_interest: 1
          yes_bid: null
          yes_ask: null
          ts: 5
        - volume: 2
          dollar_volume: 6
          price: 5
          dollar_open_interest: 0
          open_interest: 1
          yes_bid: null
          yes_ask: null
          ts: 5
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetMarketOrderBookResponse:
      required:
      - order_book
      type: object
      properties:
        order_book:
          $ref: '#/components/schemas/OrderBook'
      example:
        order_book:
          "no":
          - - 0
            - 0
          - - 0
            - 0
          "yes":
          - null
          - null
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetNotificationPreferencesResponse:
      required:
      - preferences
      type: object
      properties:
        preferences:
          $ref: '#/components/schemas/SubscriptionPreference'
      example:
        preferences:
          subscription_level: subscription_level
          push_preferences:
          - push_preferences
          - push_preferences
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetRangedMarketByTickerResponse:
      required:
      - ranged_markets
      type: object
      properties:
        ranged_markets:
          $ref: '#/components/schemas/RangedMarket'
      example:
        ranged_markets:
          ticker: ticker
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          id: id
          title: title
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetRangedMarketResponse:
      required:
      - ranged_market
      type: object
      properties:
        ranged_market:
          $ref: '#/components/schemas/RangedMarket'
      example:
        ranged_market:
          ticker: ticker
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          id: id
          title: title
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetRangedMarketsResponse:
      required:
      - ranged_markets
      type: object
      properties:
        ranged_markets:
          type: array
          items:
            $ref: '#/components/schemas/RangedMarket'
          x-go-name: RangedMarkets
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetSeriesByTickerResponse:
      type: object
      properties:
        series:
          $ref: '#/components/schemas/Series'
      example:
        series:
          ticker: ticker
          first_open_date: 2000-01-23T04:56:07.000+00:00
          title: title
          frequency: frequency
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetSeriesListResponse:
      type: object
      properties:
        series:
          type: array
          items:
            $ref: '#/components/schemas/Series'
          x-go-name: Series
      example:
        series:
        - ticker: ticker
          first_open_date: 2000-01-23T04:56:07.000+00:00
          title: title
          frequency: frequency
        - ticker: ticker
          first_open_date: 2000-01-23T04:56:07.000+00:00
          title: title
          frequency: frequency
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetUserDepositsResponse:
      required:
      - deposits
      type: object
      properties:
        deposits:
          type: array
          description: List of previous deposits for the user
          items:
            $ref: '#/components/schemas/Deposit'
          x-go-name: Deposits
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetUserImmediateFundingResponse:
      required:
      - deposit_fee_cents
      - immediate_amount_being_used
      - immediate_amount_remaining
      - immediate_deposit_amount
      type: object
      properties:
        deposit_fee_cents:
          $ref: '#/components/schemas/Cent'
        immediate_amount_being_used:
          $ref: '#/components/schemas/Cent'
        immediate_amount_remaining:
          $ref: '#/components/schemas/Cent'
        immediate_deposit_amount:
          $ref: '#/components/schemas/Cent'
      example:
        immediate_deposit_amount: null
        immediate_amount_being_used: null
        immediate_amount_remaining: null
        deposit_fee_cents: 0
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetUserWithdrawalsResponse:
      required:
      - withdrawals
      type: object
      properties:
        withdrawals:
          type: array
          description: List of previous withdrawals for the user
          items:
            $ref: '#/components/schemas/Withdrawal'
          x-go-name: Withdrawals
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ImmediateFundingStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    JSONError:
      title: JSONError is a generic structure for API error responses.
      type: object
      properties:
        code:
          type: string
          x-go-name: Code
        details:
          type: string
          x-go-name: Details
        message:
          type: string
          x-go-name: Message
        service:
          type: string
          x-go-name: Service
      example:
        code: code
        service: service
        details: details
        message: message
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: Email should be used as login identification credentials.
          format: email
          x-go-name: Email
        password:
          minLength: 6
          type: string
          description: Password defined in the first step of the sign-up.
          format: password
          x-go-name: Password
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    LoginResponse:
      required:
      - access_level
      - token
      - user_id
      type: object
      properties:
        access_level:
          type: string
          description: "Access level, to limit the access that applicants have"
          x-go-name: AccessLevel
        token:
          type: string
          description: Access token for an member role session in the api
          x-go-name: Token
        user_id:
          type: string
          description: "Your user_id, this will be required in all requests under\
            \ the /users prefix"
          format: uuid4
          x-go-name: UserId
      description: Response for login request
      example:
        access_level: access_level
        user_id: user_id
        token: token
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Market:
      type: object
      properties:
        can_close_early:
          type: boolean
          x-go-name: CanCloseEarly
        category:
          type: string
          x-go-name: Category
        close_date:
          type: string
          format: date-time
          x-go-name: CloseDate
        close_unconfirmed:
          type: boolean
          x-go-name: CloseUnconfirmed
        create_date:
          type: string
          format: date-time
          x-go-name: CreateDate
        description_case_no:
          type: string
          x-go-name: DescriptionCaseNo
        description_case_yes:
          type: string
          x-go-name: DescriptionCaseYes
        description_context:
          type: string
          x-go-name: DescriptionContext
        dollar_open_interest:
          type: integer
          format: int64
          x-go-name: DollarOpenInterest
        dollar_recent_volume:
          type: integer
          format: int64
          x-go-name: DollarRecentVolume
        dollar_volume:
          type: integer
          format: int64
          x-go-name: DollarVolume
        expiration_date:
          type: string
          format: date-time
          x-go-name: ExpirationDate
        expiration_value:
          type: string
          x-go-name: ExpirationValue
        frequency_in_days:
          type: integer
          format: int32
          x-go-name: FrequencyInDays
        id:
          type: string
          format: uuid4
          x-go-name: Id
        image_url:
          type: string
          x-go-name: ImageUrl
        last_price:
          $ref: '#/components/schemas/Cent'
        liquidity:
          $ref: '#/components/schemas/Cent'
        list_date:
          type: string
          format: date-time
          x-go-name: ListDate
        metrics_tags:
          type: array
          items:
            type: string
          x-go-name: MetricsTags
        min_tick_size:
          type: string
          x-go-name: MinTickSize
        mini_title:
          type: string
          x-go-name: MiniTitle
        open_date:
          type: string
          format: date-time
          x-go-name: OpenDate
        open_interest:
          type: integer
          format: int64
          x-go-name: OpenInterest
        option_type:
          $ref: '#/components/schemas/MarketOptionType'
        original_expiration_date:
          type: string
          format: date-time
          x-go-name: OriginalExpirationDate
        previous_price:
          $ref: '#/components/schemas/Cent'
        previous_yes_ask:
          $ref: '#/components/schemas/Cent'
        previous_yes_bid:
          $ref: '#/components/schemas/Cent'
        ranged_group_name:
          type: string
          x-go-name: RangedGroupName
        ranged_group_ticker:
          type: string
          x-go-name: RangedGroupTicker
        recent_volume:
          type: integer
          format: int64
          x-go-name: RecentVolume
        result:
          type: string
          x-go-name: Result
        rulebook_variables:
          type: object
          additionalProperties:
            type: string
          x-go-name: RulebookVariables
        settle_details:
          type: string
          x-go-name: SettleDetails
        settlement_sources:
          type: array
          items:
            $ref: '#/components/schemas/SettlementSource'
          x-go-name: SettlementSources
        status:
          $ref: '#/components/schemas/MarketStatus'
        strike_price:
          type: number
          format: double
          x-go-name: StrikePrice
        sub_title:
          type: string
          x-go-name: SubTitle
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        ticker_name:
          type: string
          x-go-name: TickerName
        title:
          type: string
          x-go-name: Title
        underlying:
          type: string
          x-go-name: Underlying
        volume:
          type: integer
          format: int64
          x-go-name: Volume
        yes_ask:
          $ref: '#/components/schemas/Cent'
        yes_bid:
          $ref: '#/components/schemas/Cent'
      description: Market details
      example:
        expiration_value: expiration_value
        dollar_recent_volume: 6
        ticker_name: ticker_name
        close_date: 2000-01-23T04:56:07.000+00:00
        rulebook_variables:
          key: rulebook_variables
        dollar_volume: 1
        mini_title: mini_title
        open_interest: 2
        yes_bid: null
        description_context: description_context
        liquidity: null
        expiration_date: 2000-01-23T04:56:07.000+00:00
        title: title
        yes_ask: null
        result: result
        original_expiration_date: 2000-01-23T04:56:07.000+00:00
        ranged_group_name: ranged_group_name
        settle_details: settle_details
        recent_volume: 7
        id: id
        close_unconfirmed: true
        create_date: 2000-01-23T04:56:07.000+00:00
        strike_price: 9.301444243932575517419536481611430644989013671875
        open_date: 2000-01-23T04:56:07.000+00:00
        previous_yes_bid: null
        sub_title: sub_title
        metrics_tags:
        - metrics_tags
        - metrics_tags
        previous_yes_ask: null
        can_close_early: true
        image_url: image_url
        option_type: option_type
        underlying: underlying
        min_tick_size: min_tick_size
        list_date: 2000-01-23T04:56:07.000+00:00
        settlement_sources:
        - name: name
          url: url
        - name: name
          url: url
        description_case_no: description_case_no
        tags:
        - tags
        - tags
        ranged_group_ticker: ranged_group_ticker
        volume: 3
        description_case_yes: description_case_yes
        dollar_open_interest: 0
        category: category
        frequency_in_days: 5
        previous_price: null
        last_price: 5
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketActivity:
      type: object
      properties:
        close_date:
          type: string
          format: date-time
          x-go-name: CloseDate
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        open_date:
          type: string
          format: date-time
          x-go-name: OpenDate
        price_change:
          $ref: '#/components/schemas/Cent'
        ticker:
          type: string
          x-go-name: Ticker
        volume_increase:
          type: integer
          format: int32
          x-go-name: VolumeIncrease
      example:
        open_date: 2000-01-23T04:56:07.000+00:00
        close_date: 2000-01-23T04:56:07.000+00:00
        price_change: 0
        ticker: ticker
        volume_increase: 6
        market_id: market_id
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketHistoryCandleStickInfo:
      type: object
      properties:
        EndTs:
          type: integer
          format: int64
        OpenInterest:
          type: integer
          format: int64
        Price:
          $ref: '#/components/schemas/OLHCM'
        StartTs:
          type: integer
          format: int64
        Volume:
          type: integer
          format: int64
        YesAsk:
          $ref: '#/components/schemas/OLHCM'
        YesBid:
          $ref: '#/components/schemas/OLHCM'
      example:
        YesAsk: null
        StartTs: 5
        EndTs: 0
        Price:
          high: null
          low: null
          mean: null
          close: 1
          open: null
        Volume: 5
        YesBid: null
        OpenInterest: 6
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketOptionType:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    MarketPosition:
      title: MarketPosition
      type: object
      properties:
        fees_paid:
          $ref: '#/components/schemas/Cent'
        final_position:
          type: integer
          description: Settlement stats
          format: int32
          x-go-name: FinalPosition
        final_position_cost:
          $ref: '#/components/schemas/Cent'
        is_settled:
          type: boolean
          x-go-name: IsSettled
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        position:
          type: integer
          description: Current stats
          format: int32
          x-go-name: Position
        position_cost:
          $ref: '#/components/schemas/Cent'
        realized_pnl:
          $ref: '#/components/schemas/Cent'
        resting_orders_count:
          type: integer
          format: int32
          x-go-name: RestingOrdersCount
        total_cost:
          $ref: '#/components/schemas/Cent'
        user_id:
          type: string
          format: uuid4
          x-go-name: UserId
        volume:
          type: integer
          format: int32
          x-go-name: Volume
      description: MarketPosition is your accumulated position on a specific market
        considering all orders and trades.
      example:
        resting_orders_count: 5
        volume: 5
        fees_paid: 0
        final_position_cost: null
        total_cost: null
        user_id: user_id
        position_cost: null
        is_settled: true
        market_id: market_id
        realized_pnl: null
        position: 1
        final_position: 6
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketStatsPoint:
      type: object
      properties:
        dollar_open_interest:
          type: integer
          format: int64
          x-go-name: DollarOpenInterest
        dollar_volume:
          type: integer
          format: int64
          x-go-name: DollarVolume
        open_interest:
          type: integer
          format: int64
          x-go-name: OpenInterest
        price:
          $ref: '#/components/schemas/Cent'
        ts:
          type: integer
          format: int64
          x-go-name: Time
        volume:
          type: integer
          format: int64
          x-go-name: Volume
        yes_ask:
          $ref: '#/components/schemas/Cent'
        yes_bid:
          $ref: '#/components/schemas/Cent'
      example:
        volume: 2
        dollar_volume: 6
        price: 5
        dollar_open_interest: 0
        open_interest: 1
        yes_bid: null
        yes_ask: null
        ts: 5
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    MarketTransaction:
      type: object
      properties:
        average_price:
          $ref: '#/components/schemas/CentiCent'
        fee:
          $ref: '#/components/schemas/CentiCent'
        is_side_yes:
          type: boolean
          x-go-name: IsSideYes
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        market_ticker:
          type: string
          x-go-name: MarketTicker
        market_title:
          type: string
          x-go-name: MarketTitle
        num_contracts:
          type: integer
          format: int64
          x-go-name: NumContracts
        realized_cost_of_contracts:
          $ref: '#/components/schemas/CentiCent'
        realized_fifo_profit:
          $ref: '#/components/schemas/CentiCent'
        realized_revenue:
          $ref: '#/components/schemas/CentiCent'
        time:
          type: string
          format: date-time
          x-go-name: Time
        type:
          type: string
          x-go-name: Type
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Notification:
      type: object
      properties:
        content:
          type: object
          additionalProperties:
            type: object
          x-go-name: Content
        created_ts:
          type: string
          format: date-time
          x-go-name: CreatedTs
        id:
          type: string
          x-go-name: Id
        is_delivered:
          type: boolean
          x-go-name: IsDelivered
        is_read:
          type: boolean
          x-go-name: IsRead
        link:
          type: string
          x-go-name: Link
        type:
          type: string
          x-go-name: Type
        user_id:
          type: string
          x-go-name: UserId
      example:
        is_read: true
        created_ts: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        is_delivered: true
        link: link
        id: id
        type: type
        content:
          key: {}
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    NotificationList:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      x-schema-name: NotificationList
    OLHCM:
      type: object
      properties:
        close:
          $ref: '#/components/schemas/Cent'
        high:
          $ref: '#/components/schemas/Cent'
        low:
          $ref: '#/components/schemas/Cent'
        mean:
          $ref: '#/components/schemas/Cent'
        open:
          $ref: '#/components/schemas/Cent'
      example:
        high: null
        low: null
        mean: null
        close: 1
        open: null
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Order:
      title: Order
      type: object
      properties:
        close_cancel_count:
          type: integer
          format: int32
          x-go-name: CloseCancelCount
        create_ts:
          type: string
          format: date-time
          x-go-name: CreateTs
        decrease_count:
          type: integer
          format: int32
          x-go-name: DecreaseCount
        expiration_ts:
          type: string
          format: date-time
          x-go-name: ExpirationTs
        extra_cost:
          $ref: '#/components/schemas/Cent'
        extra_count:
          type: integer
          format: int32
          x-go-name: ExtraCount
        fcc_cancel_count:
          type: integer
          format: int32
          x-go-name: FccCancelCount
        is_yes:
          type: boolean
          x-go-name: IsYes
        last_update_op:
          type: string
          x-go-name: LastUpdateOperation
        maker_fill_count:
          type: integer
          format: int32
          x-go-name: MakerFillCount
        market_id:
          type: string
          x-go-name: MarketId
        order_id:
          type: string
          format: uuid4
          x-go-name: Id
        place_count:
          type: integer
          format: int32
          x-go-name: PlaceCount
        price:
          $ref: '#/components/schemas/Cent'
        queue_position:
          type: integer
          format: int32
          x-go-name: QueuePosition
        remaining_count:
          type: integer
          format: int32
          x-go-name: RemainingCount
        status:
          $ref: '#/components/schemas/OrderStatus'
        taker_fees:
          $ref: '#/components/schemas/Cent'
        taker_fill_cost:
          $ref: '#/components/schemas/Cent'
        taker_fill_count:
          type: integer
          format: int32
          x-go-name: TakerFillCount
        user_id:
          type: string
          x-go-name: UserId
      description: |-
        Represents user orders in the api.

        When an order is matched multiple trades can be created this can be tracked by looking into the trade.order_id field.
      example:
        queue_position: 9
        remaining_count: 3
        create_ts: 2000-01-23T04:56:07.000+00:00
        decrease_count: 6
        taker_fill_cost: null
        market_id: market_id
        close_cancel_count: 0
        extra_count: 5
        expiration_ts: 2000-01-23T04:56:07.000+00:00
        place_count: 7
        taker_fill_count: 2
        user_id: user_id
        price: null
        extra_cost: 1
        last_update_op: last_update_op
        taker_fees: null
        fcc_cancel_count: 5
        maker_fill_count: 2
        is_yes: true
        order_id: order_id
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderBook:
      required:
      - "no"
      - "yes"
      type: object
      properties:
        "no":
          type: array
          items:
            $ref: '#/components/schemas/PriceLevel'
          x-go-name: "No"
        "yes":
          type: array
          items:
            $ref: '#/components/schemas/PriceLevel'
          x-go-name: "Yes"
      description: |-
        OrderBook
        Contains the number of pending resting order for each price on a specific market.
      example:
        "no":
        - - 0
          - 0
        - - 0
          - 0
        "yes":
        - null
        - null
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderHistory:
      type: object
      properties:
        canceled_count:
          type: integer
          format: int64
          x-go-name: CanceledCount
        close_cancel_count:
          type: integer
          format: int64
          x-go-name: CloseCancelCount
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        fcc_canceled_count:
          type: integer
          format: int64
          x-go-name: FccCancelCount
        filled_count:
          type: integer
          format: int64
          x-go-name: FilledCount
        is_yes:
          type: boolean
          x-go-name: IsYes
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        market_title:
          type: string
          x-go-name: MarketTitle
        original_count:
          type: integer
          format: int64
          x-go-name: OriginalCount
        price:
          type: integer
          format: int64
          x-go-name: Price
        remaining_count:
          type: integer
          format: int64
          x-go-name: RemainingCount
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
      example:
        original_count: 2
        updated_at: 2000-01-23T04:56:07.000+00:00
        remaining_count: 9
        market_title: market_title
        price: 7
        created_at: 2000-01-23T04:56:07.000+00:00
        market_id: market_id
        fcc_canceled_count: 5
        canceled_count: 6
        filled_count: 5
        is_yes: true
        close_cancel_count: 1
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderList:
      type: array
      items:
        $ref: '#/components/schemas/Order'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      x-schema-name: OrderList
    OrderStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    PeopleReferred:
      type: object
      properties:
        email:
          type: string
          x-go-name: Email
        referral_id:
          type: string
          x-go-name: ReferralId
        stage_in_funnel:
          type: string
          x-go-name: StageInFunnel
        time_of_referral_expiration:
          type: string
          format: date-time
          x-go-name: TimeOfReferralExpiration
      example:
        time_of_referral_expiration: 2000-01-23T04:56:07.000+00:00
        referral_id: referral_id
        email: email
        stage_in_funnel: stage_in_funnel
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PeopleReferredList:
      type: array
      items:
        $ref: '#/components/schemas/PeopleReferred'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      x-schema-name: PeopleReferredList
    PortfolioMeasurement:
      title: PortfolioMeasurement
      required:
      - a
      - cumulative_deposits
      - cumulative_number_settlements
      - cumulative_withdrawals
      - ts
      - v
      type: object
      properties:
        a:
          $ref: '#/components/schemas/Cent'
        balance_change:
          $ref: '#/components/schemas/Cent'
        cumulative_deposits:
          $ref: '#/components/schemas/Cent'
        cumulative_number_settlements:
          type: integer
          description: Count of settlements member has had from account creation to
            timestamp (inclusive)
          format: int64
          x-go-name: CumulativeNumberSettlements
        cumulative_withdrawals:
          $ref: '#/components/schemas/Cent'
        reason:
          type: string
          description: "Reason for the portfolio value change, if applicable"
          x-go-name: Reason
        ts:
          type: integer
          description: Timestamp of the read in UNIX timestamp. (https://www.unixtimestamp.com/)
          format: int64
          x-go-name: MeasurementTs
        v:
          $ref: '#/components/schemas/Cent'
      description: Portfolio measurement is simply a snapshot of the portfolio of
        a user on a timestamp.
      example:
        cumulative_number_settlements: 6
        a: 0
        reason: reason
        v: null
        cumulative_deposits: null
        balance_change: null
        cumulative_withdrawals: null
        ts: 1
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PriceLevel:
      type: array
      description: |-
        PriceLevel
        It is the state of a the market with respect to a specific price.
        It is represented as an array of 2 integer values.
        The first one is the price value and the second one is the total number of resting contract at that price among all orders.
        Minimum length: 2
        Maximum length: 2
        Items.0.Minimum: 1
        Items.0.Maximum: 99
        Items.1.Minimum: 0
        Example: [30, 50] means there are 50 resting
      items:
        type: integer
        format: int32
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      x-schema-name: PriceLevel
    PublicTrade:
      title: PublicTrade
      type: object
      properties:
        count:
          type: integer
          format: int32
          x-go-name: Count
        create_date:
          type: string
          format: date-time
          x-go-name: CreateDate
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        price:
          $ref: '#/components/schemas/Cent'
        trade_id:
          type: string
          format: uuid4
          x-go-name: TradeId
      description: |-
        Represents a trade that can be displayed publicly. This does not include maker and taker information.

        A trade is created whenever an order is fully or partially matched.
      example:
        trade_id: trade_id
        price: 6
        count: 0
        market_id: market_id
        create_date: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PublicTradeList:
      type: array
      items:
        $ref: '#/components/schemas/PublicTrade'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      x-schema-name: PublicTradeList
    RangedMarket:
      type: object
      properties:
        id:
          type: string
          format: uuid4
          x-go-name: Id
        mini_title:
          type: string
          x-go-name: MiniTitle
        mutually_exclusive_side:
          $ref: '#/components/schemas/Side'
        ticker:
          type: string
          x-go-name: Ticker
        title:
          type: string
          x-go-name: Title
      example:
        ticker: ticker
        mutually_exclusive_side: mutually_exclusive_side
        mini_title: mini_title
        id: id
        title: title
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    RangedMarketPosition:
      type: object
      properties:
        collateral_returned_cents:
          $ref: '#/components/schemas/Cent'
        market_positions:
          type: array
          items:
            $ref: '#/components/schemas/MarketPosition'
          x-go-name: MarketPositions
        ranged_market_id:
          type: string
          format: uuid4
          x-go-name: RangedMarketId
        user_id:
          type: string
          format: uuid4
          x-go-name: UserId
      example:
        user_id: user_id
        ranged_market_id: ranged_market_id
        market_positions:
        - resting_orders_count: 5
          volume: 5
          fees_paid: 0
          final_position_cost: null
          total_cost: null
          user_id: user_id
          position_cost: null
          is_settled: true
          market_id: market_id
          realized_pnl: null
          position: 1
          final_position: 6
        - resting_orders_count: 5
          volume: 5
          fees_paid: 0
          final_position_cost: null
          total_cost: null
          user_id: user_id
          position_cost: null
          is_settled: true
          market_id: market_id
          realized_pnl: null
          position: 1
          final_position: 6
        collateral_returned_cents: 0
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ResetPasswordRequest:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: Email used to create your account
          format: email
          x-go-name: Email
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Series:
      type: object
      properties:
        first_open_date:
          type: string
          format: date-time
          x-go-name: FirstOpenDate
        frequency:
          type: string
          x-go-name: Frequency
        ticker:
          type: string
          x-go-name: Ticker
        title:
          type: string
          x-go-name: Title
      example:
        ticker: ticker
        first_open_date: 2000-01-23T04:56:07.000+00:00
        title: title
        frequency: frequency
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    SettlementHistory:
      type: object
      properties:
        determined_time:
          type: string
          format: date-time
          x-go-name: DeterminedTime
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        market_result:
          type: string
          x-go-name: MarketResult
        market_title:
          type: string
          x-go-name: MarketTitle
        no_count:
          type: integer
          format: int64
          x-go-name: NoCount
        no_total_cost:
          type: integer
          format: int64
          x-go-name: NoTotalCost
        profit:
          type: integer
          format: int64
          x-go-name: Profit
        settled_time:
          type: string
          format: date-time
          x-go-name: SettledTime
        yes_count:
          type: integer
          format: int64
          x-go-name: YesCount
        yes_total_cost:
          type: integer
          format: int64
          x-go-name: YesTotalCost
      example:
        market_title: market_title
        no_total_cost: 2
        settled_time: 2000-01-23T04:56:07.000+00:00
        yes_count: 7
        market_id: market_id
        market_result: market_result
        no_count: 3
        profit: 4
        determined_time: 2000-01-23T04:56:07.000+00:00
        yes_total_cost: 1
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    SettlementSource:
      type: object
      properties:
        name:
          type: string
          x-go-name: Name
        url:
          type: string
          x-go-name: Url
      example:
        name: name
        url: url
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Side:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    SubscriptionPreference:
      type: object
      properties:
        push_preferences:
          type: array
          items:
            type: string
          x-go-name: PushPreferences
        subscription_level:
          type: string
          x-go-name: Preference
      example:
        subscription_level: subscription_level
        push_preferences:
        - push_preferences
        - push_preferences
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    TradeHistory:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          x-go-name: Amount
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        fee:
          type: integer
          format: int64
          x-go-name: Fee
        is_yes:
          type: boolean
          x-go-name: IsYes
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        market_title:
          type: string
          x-go-name: MarketTitle
        price:
          type: integer
          format: int64
          x-go-name: Price
      example:
        amount: 1
        market_title: market_title
        price: 6
        fee: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        market_id: market_id
        is_yes: true
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    TradeStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    TradesGetResponse:
      required:
      - trades
      type: object
      properties:
        trades:
          $ref: '#/components/schemas/PublicTradeList'
      example:
        trades:
        - trade_id: trade_id
          price: 6
          count: 0
          market_id: market_id
          create_date: 2000-01-23T04:56:07.000+00:00
        - trade_id: trade_id
          price: 6
          count: 0
          market_id: market_id
          create_date: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    User:
      title: User
      type: object
      properties:
        area_code:
          type: string
          x-go-name: AreaCode
        birth_date:
          type: string
          x-go-name: BirthDate
        city:
          type: string
          x-go-name: City
        country:
          type: string
          x-go-name: Country
        country_code:
          type: string
          x-go-name: CountryCode
        created_ts:
          type: string
          format: date-time
          x-go-name: CreatedTs
        email:
          type: string
          x-go-name: Email
        finished_fre:
          type: boolean
          x-go-name: FinishedFre
        first_name:
          type: string
          x-go-name: FirstName
        last_name:
          type: string
          x-go-name: LastName
        phone_number:
          type: string
          x-go-name: PhoneNumber
        postal_code:
          type: string
          x-go-name: PostalCode
        state:
          type: string
          x-go-name: State
        street1:
          type: string
          x-go-name: Street1
        street2:
          type: string
          x-go-name: Street2
        use_bid_ask:
          type: boolean
          x-go-name: UseBidAsk
        user_id:
          type: string
          format: uuid4
          x-go-name: UserId
        watchlist:
          type: array
          items:
            type: string
          x-go-name: Watchlist
        wire_code:
          type: string
          x-go-name: WireCode
      description: Represents a user's profile on the api.
      example:
        country: country
        city: city
        area_code: area_code
        birth_date: birth_date
        finished_fre: true
        last_name: last_name
        use_bid_ask: true
        country_code: country_code
        wire_code: wire_code
        created_ts: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        phone_number: phone_number
        street1: street1
        state: state
        street2: street2
        postal_code: postal_code
        first_name: first_name
        watchlist:
        - watchlist
        - watchlist
        email: email
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCancelRequest:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: An array of order IDs to cancel
          items:
            type: string
            format: uuid4
          x-go-name: OrderIds
      description: Request for cancelling a batch of orders
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCancelResponse:
      title: Response for cancelling a batch of orders.
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          description: An array of responses corresponding to the orders in the request.
          items:
            $ref: '#/components/schemas/UserBatchOrdersCancelSingleOrderResponse'
          x-go-name: Orders
      example:
        orders:
        - reduced_by: 0
          id: id
          error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 9
            remaining_count: 3
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: null
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 2
            user_id: user_id
            price: null
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: null
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
        - reduced_by: 0
          id: id
          error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 9
            remaining_count: 3
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: null
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 2
            user_id: user_id
            price: null
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: null
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCancelSingleOrderResponse:
      required:
      - id
      type: object
      properties:
        error:
          $ref: '#/components/schemas/JSONError'
        id:
          type: string
          description: ID of the order
          x-go-name: Id
        order:
          $ref: '#/components/schemas/Order'
        reduced_by:
          type: integer
          description: Result of the decrease operation
          format: int32
          x-go-name: ReducedBy
      description: Response for cancelling a batch of orders
      example:
        reduced_by: 0
        id: id
        error:
          code: code
          service: service
          details: details
          message: message
        order:
          queue_position: 9
          remaining_count: 3
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: null
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 2
          user_id: user_id
          price: null
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: null
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCreateRequest:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          description: An array of individual orders to place
          items:
            $ref: '#/components/schemas/UserOrderCreateRequest'
          x-go-name: Orders
      description: Request for submitting a batch of orders
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCreateResponse:
      required:
      - orders
      type: object
      properties:
        orders:
          type: array
          description: An array of responses corresponding to orders in the request.
          items:
            $ref: '#/components/schemas/UserBatchOrdersCreateSingleOrderResponse'
          x-go-name: Orders
      description: Response for submitting a batch of order
      example:
        orders:
        - error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 9
            remaining_count: 3
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: null
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 2
            user_id: user_id
            price: null
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: null
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
          status: status
        - error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 9
            remaining_count: 3
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: null
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 2
            user_id: user_id
            price: null
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: null
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCreateSingleOrderResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/JSONError'
        order:
          $ref: '#/components/schemas/Order'
        status:
          type: string
          description: Status of the order submit operation
          x-go-name: Status
      description: Response for submitting an order
      example:
        error:
          code: code
          service: service
          details: details
          message: message
        order:
          queue_position: 9
          remaining_count: 3
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: null
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 2
          user_id: user_id
          price: null
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: null
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserChangePasswordRequest:
      required:
      - new_password
      - old_password
      type: object
      properties:
        new_password:
          type: string
          description: New password value.
          format: password
          x-go-name: NewPassword
        old_password:
          type: string
          description: Old password should be passed as a validation parameter.
          format: password
          x-go-name: OldPassword
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserDepositRequest:
      required:
      - amount_cents
      - bank_id
      - fee_cents
      type: object
      properties:
        amount_cents:
          $ref: '#/components/schemas/Cent'
        bank_id:
          type: string
          x-go-name: BankId
        fee_cents:
          $ref: '#/components/schemas/Cent'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserDepositResponse:
      required:
      - deposit_id
      - estimated_ach_time_days
      type: object
      properties:
        deposit:
          $ref: '#/components/schemas/Deposit'
        deposit_id:
          type: string
          description: Id for the deposit that was created.
          x-go-name: DepositId
        estimated_ach_time_days:
          type: integer
          description: The estimated number of days we believe the ach transfer will
            take
          format: int32
          x-go-name: EstimatedAchTimeDays
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetAccountHistoryResponse:
      required:
      - entries
      type: object
      properties:
        entries:
          type: array
          description: List of account history items for the user
          items:
            $ref: '#/components/schemas/AccountHistoryEntry'
          x-go-name: Entries
      example:
        entries:
        - data:
            Order:
              original_count: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              remaining_count: 9
              market_title: market_title
              price: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              fcc_canceled_count: 5
              canceled_count: 6
              filled_count: 5
              is_yes: true
              close_cancel_count: 1
            Deposit:
              amount: null
              returned_amount: null
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: null
              created_at: 2000-01-23T04:56:07.000+00:00
              immediate_status: immediate_status
              deposit_type: deposit_type
              immediate_amount: null
              status: status
            Settlement:
              market_title: market_title
              no_total_cost: 2
              settled_time: 2000-01-23T04:56:07.000+00:00
              yes_count: 7
              market_id: market_id
              market_result: market_result
              no_count: 3
              profit: 4
              determined_time: 2000-01-23T04:56:07.000+00:00
              yes_total_cost: 1
            Trade:
              amount: 1
              market_title: market_title
              price: 6
              fee: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              is_yes: true
            Credit:
              reason: reason
              amount_cents: 0
              created_at: 2000-01-23T04:56:07.000+00:00
              type: type
              status: status
            Withdrawal:
              amount: null
              returned_amount: null
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: null
              created_at: 2000-01-23T04:56:07.000+00:00
              status: status
          type: type
        - data:
            Order:
              original_count: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              remaining_count: 9
              market_title: market_title
              price: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              fcc_canceled_count: 5
              canceled_count: 6
              filled_count: 5
              is_yes: true
              close_cancel_count: 1
            Deposit:
              amount: null
              returned_amount: null
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: null
              created_at: 2000-01-23T04:56:07.000+00:00
              immediate_status: immediate_status
              deposit_type: deposit_type
              immediate_amount: null
              status: status
            Settlement:
              market_title: market_title
              no_total_cost: 2
              settled_time: 2000-01-23T04:56:07.000+00:00
              yes_count: 7
              market_id: market_id
              market_result: market_result
              no_count: 3
              profit: 4
              determined_time: 2000-01-23T04:56:07.000+00:00
              yes_total_cost: 1
            Trade:
              amount: 1
              market_title: market_title
              price: 6
              fee: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              is_yes: true
            Credit:
              reason: reason
              amount_cents: 0
              created_at: 2000-01-23T04:56:07.000+00:00
              type: type
              status: status
            Withdrawal:
              amount: null
              returned_amount: null
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: null
              created_at: 2000-01-23T04:56:07.000+00:00
              status: status
          type: type
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetBalanceResponse:
      required:
      - balance
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/Cent'
      example:
        balance: 0
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetCurrentPortfolioValueResponse:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PortfolioMeasurement'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketPositionResponse:
      required:
      - market_position
      type: object
      properties:
        market_position:
          $ref: '#/components/schemas/MarketPosition'
      example:
        market_position:
          resting_orders_count: 5
          volume: 5
          fees_paid: 0
          final_position_cost: null
          total_cost: null
          user_id: user_id
          position_cost: null
          is_settled: true
          market_id: market_id
          realized_pnl: null
          position: 1
          final_position: 6
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketPositionsResponse:
      required:
      - market_positions
      type: object
      properties:
        market_positions:
          type: array
          description: List of market positions
          items:
            $ref: '#/components/schemas/MarketPosition'
          x-go-name: Positions
      example:
        market_positions:
        - resting_orders_count: 5
          volume: 5
          fees_paid: 0
          final_position_cost: null
          total_cost: null
          user_id: user_id
          position_cost: null
          is_settled: true
          market_id: market_id
          realized_pnl: null
          position: 1
          final_position: 6
        - resting_orders_count: 5
          volume: 5
          fees_paid: 0
          final_position_cost: null
          total_cost: null
          user_id: user_id
          position_cost: null
          is_settled: true
          market_id: market_id
          realized_pnl: null
          position: 1
          final_position: 6
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketResponse:
      required:
      - market
      type: object
      properties:
        market:
          $ref: '#/components/schemas/Market'
      example:
        market:
          expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 2
          yes_bid: null
          description_context: description_context
          liquidity: null
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: null
          result: result
          original_expiration_date: 2000-01-23T04:56:07.000+00:00
          ranged_group_name: ranged_group_name
          settle_details: settle_details
          recent_volume: 7
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          strike_price: 9.301444243932575517419536481611430644989013671875
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: null
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          previous_yes_ask: null
          can_close_early: true
          image_url: image_url
          option_type: option_type
          underlying: underlying
          min_tick_size: min_tick_size
          list_date: 2000-01-23T04:56:07.000+00:00
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          description_case_no: description_case_no
          tags:
          - tags
          - tags
          ranged_group_ticker: ranged_group_ticker
          volume: 3
          description_case_yes: description_case_yes
          dollar_open_interest: 0
          category: category
          frequency_in_days: 5
          previous_price: null
          last_price: 5
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketsResponse:
      required:
      - markets
      type: object
      properties:
        markets:
          type: array
          items:
            $ref: '#/components/schemas/Market'
          x-go-name: Markets
      example:
        markets:
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 2
          yes_bid: null
          description_context: description_context
          liquidity: null
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: null
          result: result
          original_expiration_date: 2000-01-23T04:56:07.000+00:00
          ranged_group_name: ranged_group_name
          settle_details: settle_details
          recent_volume: 7
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          strike_price: 9.301444243932575517419536481611430644989013671875
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: null
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          previous_yes_ask: null
          can_close_early: true
          image_url: image_url
          option_type: option_type
          underlying: underlying
          min_tick_size: min_tick_size
          list_date: 2000-01-23T04:56:07.000+00:00
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          description_case_no: description_case_no
          tags:
          - tags
          - tags
          ranged_group_ticker: ranged_group_ticker
          volume: 3
          description_case_yes: description_case_yes
          dollar_open_interest: 0
          category: category
          frequency_in_days: 5
          previous_price: null
          last_price: 5
          status: status
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 2
          yes_bid: null
          description_context: description_context
          liquidity: null
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: null
          result: result
          original_expiration_date: 2000-01-23T04:56:07.000+00:00
          ranged_group_name: ranged_group_name
          settle_details: settle_details
          recent_volume: 7
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          strike_price: 9.301444243932575517419536481611430644989013671875
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: null
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          previous_yes_ask: null
          can_close_early: true
          image_url: image_url
          option_type: option_type
          underlying: underlying
          min_tick_size: min_tick_size
          list_date: 2000-01-23T04:56:07.000+00:00
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          description_case_no: description_case_no
          tags:
          - tags
          - tags
          ranged_group_ticker: ranged_group_ticker
          volume: 3
          description_case_yes: description_case_yes
          dollar_open_interest: 0
          category: category
          frequency_in_days: 5
          previous_price: null
          last_price: 5
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetNotificationsResponse:
      required:
      - notifications
      type: object
      properties:
        notifications:
          $ref: '#/components/schemas/NotificationList'
      example:
        notifications:
        - is_read: true
          created_ts: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          is_delivered: true
          link: link
          id: id
          type: type
          content:
            key: {}
        - is_read: true
          created_ts: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          is_delivered: true
          link: link
          id: id
          type: type
          content:
            key: {}
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetPortfolioHistoryRequest:
      type: object
      properties:
        max_date:
          type: string
          description: |-
            Restricts the response to orders before a timestamp
            in: query
          format: date-time
          x-go-name: MaxDate
        max_ts:
          type: integer
          description: |-
            Restricts the response to orders before a timestamp in unix seconds, overrides max_date, defaults to now.
            in: query
          format: int64
          x-go-name: MaxTs
        min_date:
          type: string
          description: |-
            Restricts the response to orders after a timestamp
            in: query
          format: date-time
          x-go-name: MinDate
        min_ts:
          type: integer
          description: |-
            Restricts the response to orders after a timestamp in unix seconds, overrides min_date, defaults to one hour before now.
            in: query
          format: int64
          x-go-name: MinTs
        num_buckets:
          type: integer
          description: |-
            Determines the number of buckets to average over when performing subsampling, defaults to 1440.
            in: query
          format: int32
          x-go-name: NumBuckets
      description: Request for fetching user portfolio history
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetPortfolioHistoryResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioMeasurement'
          x-go-name: Values
      example:
        values:
        - cumulative_number_settlements: 6
          a: 0
          reason: reason
          v: null
          cumulative_deposits: null
          balance_change: null
          cumulative_withdrawals: null
          ts: 1
        - cumulative_number_settlements: 6
          a: 0
          reason: reason
          v: null
          cumulative_deposits: null
          balance_change: null
          cumulative_withdrawals: null
          ts: 1
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetProfileResponse:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
      example:
        user:
          country: country
          city: city
          area_code: area_code
          birth_date: birth_date
          finished_fre: true
          last_name: last_name
          use_bid_ask: true
          country_code: country_code
          wire_code: wire_code
          created_ts: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          phone_number: phone_number
          street1: street1
          state: state
          street2: street2
          postal_code: postal_code
          first_name: first_name
          watchlist:
          - watchlist
          - watchlist
          email: email
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetRangedMarketPositionResponse:
      required:
      - ranged_market_position
      type: object
      properties:
        ranged_market_position:
          $ref: '#/components/schemas/RangedMarketPosition'
      example:
        ranged_market_position:
          user_id: user_id
          ranged_market_id: ranged_market_id
          market_positions:
          - resting_orders_count: 5
            volume: 5
            fees_paid: 0
            final_position_cost: null
            total_cost: null
            user_id: user_id
            position_cost: null
            is_settled: true
            market_id: market_id
            realized_pnl: null
            position: 1
            final_position: 6
          - resting_orders_count: 5
            volume: 5
            fees_paid: 0
            final_position_cost: null
            total_cost: null
            user_id: user_id
            position_cost: null
            is_settled: true
            market_id: market_id
            realized_pnl: null
            position: 1
            final_position: 6
          collateral_returned_cents: 0
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetReferralInfoResponse:
      type: object
      properties:
        eligible_to_refer:
          type: boolean
          x-go-name: EligibleToRefer
        num_contracts_traded:
          type: integer
          format: int64
          x-go-name: NumContractsTraded
        people_referred:
          $ref: '#/components/schemas/PeopleReferredList'
        referral_code:
          type: string
          x-go-name: ReferralCode
        referral_id:
          type: string
          x-go-name: ReferralId
        referral_money_rewarded:
          $ref: '#/components/schemas/Cent'
        stage_in_funnel:
          type: string
          x-go-name: StageInFunnel
      example:
        referral_money_rewarded: 6
        eligible_to_refer: true
        num_contracts_traded: 0
        referral_code: referral_code
        referral_id: referral_id
        people_referred:
        - time_of_referral_expiration: 2000-01-23T04:56:07.000+00:00
          referral_id: referral_id
          email: email
          stage_in_funnel: stage_in_funnel
        - time_of_referral_expiration: 2000-01-23T04:56:07.000+00:00
          referral_id: referral_id
          email: email
          stage_in_funnel: stage_in_funnel
        stage_in_funnel: stage_in_funnel
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetWatchlistResponse:
      required:
      - watchlist
      type: object
      properties:
        watchlist:
          $ref: '#/components/schemas/Watchlist'
      example:
        watchlist:
          market_ids:
          - market_ids
          - market_ids
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserListLedgerxBankAccountsResponse:
      required:
      - accounts
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountDetails'
          x-go-name: Accounts
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderCreateRequest:
      required:
      - count
      - market_id
      - price
      - side
      type: object
      properties:
        count:
          type: integer
          description: Specifies how many contracts should be bought
          format: int32
          x-go-name: Count
        expiration_unix_ts:
          type: integer
          description: "Specifies the expiration time of the order, in unix seconds.\
            \  If this is not supplied, or is 0, the order won't expire."
          format: int64
          x-go-name: ExpirationUnix
        market_id:
          type: string
          description: Specifies the id of the market for this order
          format: uuid4
          x-go-name: MarketId
        max_cost_cents:
          $ref: '#/components/schemas/Cent'
        price:
          $ref: '#/components/schemas/Cent'
        sell_position_capped:
          type: boolean
          description: Specifies whether the order place count should be capped by
            the members current position.
          x-go-name: SellPositionCapped
        side:
          type: string
          description: Specifies if this is a 'yes' or 'no' order
          x-go-name: Side
      description: Request for submitting an order
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderCreateResponse:
      required:
      - order
      - status
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        status:
          type: string
          description: Status of the order submit operation
          x-go-name: Status
      description: Response for submitting an order
      example:
        order:
          queue_position: 9
          remaining_count: 3
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: null
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 2
          user_id: user_id
          price: null
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: null
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderDecreaseRequest:
      type: object
      properties:
        count:
          type: integer
          format: int32
          x-go-name: Count
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderDecreaseResponse:
      required:
      - order
      - reduced_by
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        reduced_by:
          type: integer
          description: Result of the decrease operation
          format: int32
          x-go-name: ReducedBy
      example:
        reduced_by: 0
        order:
          queue_position: 9
          remaining_count: 3
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: null
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 2
          user_id: user_id
          price: null
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: null
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrdersGetResponse:
      required:
      - orders
      type: object
      properties:
        orders:
          $ref: '#/components/schemas/OrderList'
      example:
        orders:
        - queue_position: 9
          remaining_count: 3
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: null
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 2
          user_id: user_id
          price: null
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: null
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
        - queue_position: 9
          remaining_count: 3
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: null
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 2
          user_id: user_id
          price: null
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: null
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserTrade:
      title: UserTrade
      type: object
      properties:
        count:
          type: integer
          format: int32
          x-go-name: Count
        create_date:
          type: string
          format: date-time
          x-go-name: CreateDate
        id:
          type: string
          format: uuid4
          x-go-name: Id
        is_taker:
          type: boolean
          x-go-name: IsTaker
        is_yes:
          type: boolean
          x-go-name: IsYes
        market_id:
          type: string
          format: uuid4
          x-go-name: MarketId
        order_id:
          type: string
          format: uuid4
          x-go-name: OrderId
        price:
          $ref: '#/components/schemas/Cent'
        status:
          $ref: '#/components/schemas/TradeStatus'
      description: |-
        Represents a trade from the user perspective.

        A trade is created whenever an order is fully or partially matched, so there can be multiple trades with the same order_id.
        It is guaranteed that the sum of the count field for all the trades with the same order_id field shouldn't exceed the place_count on the order.
      example:
        is_taker: true
        price: 6
        count: 0
        market_id: market_id
        id: id
        create_date: 2000-01-23T04:56:07.000+00:00
        is_yes: true
        order_id: order_id
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserTradeList:
      type: array
      items:
        $ref: '#/components/schemas/UserTrade'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      x-schema-name: UserTradeList
    UserTradesGetResponse:
      required:
      - trades
      type: object
      properties:
        trades:
          $ref: '#/components/schemas/UserTradeList'
      example:
        trades:
        - is_taker: true
          price: 6
          count: 0
          market_id: market_id
          id: id
          create_date: 2000-01-23T04:56:07.000+00:00
          is_yes: true
          order_id: order_id
          status: status
        - is_taker: true
          price: 6
          count: 0
          market_id: market_id
          id: id
          create_date: 2000-01-23T04:56:07.000+00:00
          is_yes: true
          order_id: order_id
          status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserUpdateProfileRequest:
      required:
      - area_code
      - country
      - country_code
      - phone_number
      - postal_code
      - state
      type: object
      properties:
        area_code:
          maxLength: 3
          minLength: 3
          type: string
          description: User's phone area code.
          example: "022"
          x-go-name: AreaCode
        birth_date:
          type: string
          x-go-name: BirthDate
        city:
          type: string
          x-go-name: City
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: User's country 2 digits code
          example: US
          x-go-name: Country
        country_code:
          maxLength: 1
          minLength: 1
          type: string
          description: User's phone country code. Should be 1 for now because only
            USA accounts are accepted.
          example: "1"
          x-go-name: CountryCode
        finished_fre:
          type: boolean
          x-go-name: FinishedFre
        first_name:
          type: string
          x-go-name: FirstName
        last_name:
          type: string
          x-go-name: LastName
        phone_number:
          maxLength: 7
          minLength: 7
          type: string
          description: User's phone number.
          example: "4759128"
          x-go-name: PhoneNumber
        postal_code:
          maxLength: 5
          minLength: 5
          type: string
          description: User's address postal code
          example: "92044"
          x-go-name: PostalCode
        state:
          maxLength: 2
          minLength: 2
          type: string
          description: User's state 2 digits code
          example: NY
          x-go-name: State
        street1:
          type: string
          x-go-name: Street1
        street2:
          type: string
          x-go-name: Street2
        use_bid_ask:
          type: boolean
          x-go-name: UseBidAsk
        watchlist:
          type: array
          items:
            type: string
          x-go-name: Watchlist
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserWithdrawalAvailableBalanceResponse:
      required:
      - available_balance_cents
      - withdrawal_fee_cents
      type: object
      properties:
        available_balance_cents:
          $ref: '#/components/schemas/Cent'
        withdrawal_fee_cents:
          $ref: '#/components/schemas/Cent'
      example:
        available_balance_cents: 0
        withdrawal_fee_cents: null
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserWithdrawalRequest:
      required:
      - amount_cents
      - bank_id
      - fee_cents
      type: object
      properties:
        amount_cents:
          $ref: '#/components/schemas/Cent'
        bank_id:
          type: string
          x-go-name: BankId
        fee_cents:
          $ref: '#/components/schemas/Cent'
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserWithdrawalResponse:
      required:
      - withdrawal_id
      type: object
      properties:
        withdrawal:
          $ref: '#/components/schemas/Withdrawal'
        withdrawal_id:
          type: string
          description: Id for the withdrawal that was created.
          x-go-name: WithdrawalId
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Watchlist:
      title: Watchlist
      type: object
      properties:
        market_ids:
          type: array
          items:
            type: string
          x-go-name: MarketIds
      description: "Watchlist is the list of markets that you have some activity on,\
        \ this is used mostly by the UI."
      example:
        market_ids:
        - market_ids
        - market_ids
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Withdrawal:
      title: Withdrawal
      type: object
      properties:
        amount_cents:
          $ref: '#/components/schemas/Cent'
        bank_id:
          type: string
          x-go-name: BankId
        created_ts:
          type: string
          format: date-time
          x-go-name: CreatedTs
        id:
          type: string
          x-go-name: Id
        return_code:
          type: string
          x-go-name: ReturnCode
        return_reason:
          type: string
          x-go-name: ReturnReason
        status:
          $ref: '#/components/schemas/WithdrawalStatus'
        user_id:
          type: string
          x-go-name: UserId
      description: Represents a withdrawal.
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    WithdrawalHistory:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Cent'
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        fee:
          $ref: '#/components/schemas/Cent'
        returned_amount:
          $ref: '#/components/schemas/Cent'
        status:
          $ref: '#/components/schemas/WithdrawalStatus'
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
      example:
        amount: null
        returned_amount: null
        updated_at: 2000-01-23T04:56:07.000+00:00
        fee: null
        created_at: 2000-01-23T04:56:07.000+00:00
        status: status
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    WithdrawalStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
  responses:
    ChangeSubscriptionResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeSubscriptionResponse'
    CreateFrontendSessionResponse:
      description: ""
      headers:
        session_id:
          style: simple
          explode: false
          schema:
            type: string
    EmptyResponse:
      description: No fields are returned on the response.
    ExchangeStatus:
      description: ""
      headers:
        exchange_active:
          style: simple
          explode: false
          schema:
            type: boolean
        immediate_funding_active:
          style: simple
          explode: false
          schema:
            type: boolean
        trading_active:
          style: simple
          explode: false
          schema:
            type: boolean
    GetActiveMarketsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActiveMarketsResponse'
    GetEventByTicker:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventByTickerResponse'
    GetEventByTickerCached:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventByTickerResponse'
    GetEvents:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventsResponse'
    GetEventsCached:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventsResponse'
    GetMarketHistoryResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMarketHistoryResponse'
    GetMarketOrderBookResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMarketOrderBookResponse'
    GetMarketResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketResponse'
    GetMarketsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketsResponse'
    GetNotificationPreferencesResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotificationPreferencesResponse'
    GetRangedMarket:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRangedMarketResponse'
    GetRangedMarketByTicker:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRangedMarketByTickerResponse'
    GetRangedMarkets:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRangedMarketsResponse'
    GetSeriesByTicker:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSeriesByTickerResponse'
    GetSeriesList:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSeriesListResponse'
    GetUserDepositsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserDepositsResponse'
    GetUserImmediateFunding:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserImmediateFundingResponse'
    GetUserWithdrawalsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserWithdrawalsResponse'
    JSONError:
      description: JSONError is a generic structure for API error responses.
      headers:
        code:
          style: simple
          explode: false
          schema:
            type: string
        details:
          style: simple
          explode: false
          schema:
            type: string
        message:
          style: simple
          explode: false
          schema:
            type: string
        service:
          style: simple
          explode: false
          schema:
            type: string
    LoginResponse:
      description: ""
      headers:
        Set-Cookie:
          description: Access token is set on a cookie named 'sessions' as well
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
    TradesGetResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradesGetResponse'
    UserBatchOrdersCancelResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserBatchOrdersCancelResponse'
    UserBatchOrdersCreateResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserBatchOrdersCreateResponse'
    UserCreateResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
    UserGetAccountHistoryResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetAccountHistoryResponse'
    UserGetBalanceResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetBalanceResponse'
    UserGetCurrentPortfolioValueResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetCurrentPortfolioValueResponse'
    UserGetMarketPositionResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketPositionResponse'
    UserGetMarketPositionsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketPositionsResponse'
    UserGetNotificationsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetNotificationsResponse'
    UserGetPortfolioHistoryResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetPortfolioHistoryResponse'
    UserGetProfileResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetProfileResponse'
    UserGetProfitsAndLossesResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cent'
    UserGetRangedMarketPositionResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetRangedMarketPositionResponse'
    UserGetReferralInfoResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetReferralInfoResponse'
    UserGetWatchlistResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetWatchlistResponse'
    UserListLedgerxBankAccountsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserListLedgerxBankAccountsResponse'
    UserOrderCancelResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrderDecreaseResponse'
    UserOrderCreateResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrderCreateResponse'
    UserOrderDecreaseResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrderDecreaseResponse'
    UserOrdersGetResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrdersGetResponse'
    UserRequestDepositResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDepositResponse'
    UserRequestWithdrawalResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserWithdrawalResponse'
    UserTradesGetResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserTradesGetResponse'
    UserWithdrawalAvailableBalanceResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserWithdrawalAvailableBalanceResponse'
  securitySchemes:
    cookie:
      type: apiKey
      name: Authorization
      in: header
